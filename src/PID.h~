#ifndef PID_H
#define PID_H

#include<iostream>
#include<vector>

class PID {
public:
  /*
  * Errors
  */
  double p_error;
  double i_error;
  double d_error;

  /*
  * Coefficients
  */ 
  double Kp;
  double Ki;
  double Kd;
  double previous_cte;
  
  ///* steering angle limits
  double max_steering_angle;
  
  ///* twiddle algorithm parameters*///
 std::vector<double> dp;
 int step, parameter_index;
 int num_settle_steps,num_evaluate_steps;
 double total_error, best_error;
 bool tried_increasing, tried_decreasing, is_twiddled;

  /*
  * Constructor
  */
  PID();

  /*
  * Destructor.
  */
  virtual ~PID();

  /*
  * Initialize PID.
  */
  void Init(double Kp, double Ki, double Kd);

  /*
  * Update the PID error variables given cross track error.
  */
  void UpdateError(double cte);

  /*
  * Calculate the total PID error.
  */
  double TotalError();
};

#endif /* PID_H */
